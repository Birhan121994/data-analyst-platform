# Generated by Django 4.2.7 on 2025-10-21 18:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('data_type', models.CharField(choices=[('csv', 'CSV'), ('excel', 'Excel'), ('json', 'JSON'), ('sql', 'SQL Database')], max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to='datasets/')),
                ('database_connection', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Visualization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('chart_type', models.CharField(choices=[('line', 'Line Chart'), ('bar', 'Bar Chart'), ('scatter', 'Scatter Plot'), ('histogram', 'Histogram'), ('box', 'Box Plot'), ('heatmap', 'Heatmap')], max_length=20)),
                ('configuration', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('data_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_platform.datasource')),
            ],
        ),
        migrations.CreateModel(
            name='PredictiveModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('model_type', models.CharField(choices=[('linear_regression', 'Linear Regression'), ('logistic_regression', 'Logistic Regression'), ('random_forest', 'Random Forest'), ('decision_tree', 'Decision Tree'), ('svm', 'Support Vector Machine'), ('kmeans', 'K-Means Clustering'), ('neural_network', 'Neural Network')], max_length=30)),
                ('parameters', models.JSONField(default=dict)),
                ('model_file', models.FileField(blank=True, null=True, upload_to='models/')),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(choices=[('training', 'Training'), ('trained', 'Trained'), ('failed', 'Failed'), ('deployed', 'Deployed')], default='training', max_length=20)),
                ('training_time', models.FloatField(blank=True, null=True)),
                ('feature_importance', models.JSONField(blank=True, default=dict)),
                ('metrics', models.JSONField(blank=True, default=dict)),
                ('description', models.TextField(blank=True)),
                ('is_public', models.BooleanField(default=False)),
                ('version', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_platform.datasource')),
                ('parent_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_platform.predictivemodel')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ModelPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_data', models.JSONField()),
                ('prediction', models.JSONField()),
                ('confidence', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_platform.predictivemodel')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('analysis_type', models.CharField(choices=[('descriptive', 'Descriptive Statistics'), ('correlation', 'Correlation Analysis'), ('regression', 'Regression Analysis'), ('clustering', 'Clustering'), ('classification', 'Classification')], max_length=20)),
                ('parameters', models.JSONField(default=dict)),
                ('results', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('data_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_platform.datasource')),
            ],
        ),
        migrations.CreateModel(
            name='ModelVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_number', models.IntegerField()),
                ('changes', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='data_platform.predictivemodel')),
            ],
            options={
                'ordering': ['-version_number'],
                'unique_together': {('model', 'version_number')},
            },
        ),
    ]
